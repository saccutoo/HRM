<!-- Modal -->
<!-- Modal -->
<div class="modal fade erpModel" id="myModal" role="dialog" aria-labelledby="myModalLabel" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true" style="font-size: 28px !important">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">ERP</h4>
            </div>
            <div class="modal-body" style="overflow:hidden;">
                <div id="contentModel"></div>
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
                </div>*@
        </div>
    </div>
</div>

<script>
    function CreatePopupPayment(options) {
        if (options.width != null) {
            var left = ($(window).width() - options.width) / 2;
            if (left < 0) {
                left = 0;
            }
            $(".modal-dialog").css({ 'margin-left': left });
            $(".modal-content").css({ 'width': options.width });
        }
        if (options.title != null) {
            $("#myModalLabel").html(options.title);
        }

        if (options.data == null) {
            options.data = {};
        }
        $.ajax(
        {
            url: options.url,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: options.data,
            async: false,
            success: function (response) {
                $("#contentModel").html(response);
                $("#myModal").modal('show');
            }
        });

        var $form = $("#" + options.idform);
        $form.find(".btnSubmit").on("click", function () {
            var a = $("#CommitmentStatus").val();
            var b = $("#CommitmentAmount").val();
            var c = 0;
            var d = "";
            $.ajax(
       {
           url: '/Contract_Payment/AmountCommitmentDept',
           type: "GET",
           dataType: "json",
           async: false,
           success: function (response) {
               var obj = response.data;
               if (response.status == 1 && obj != null) {
                   c = obj.AmountCommintPart;
                   d = obj.AmountCommintPartSting;
               }
           }
       });
            if (b != "" && b > 0 && a == "" && parseFloat(b) > parseFloat(c)) {
                $.SmartMessageBox({
                    title: 'Thông báo',
                    content: 'Vượt quá hạn mức:' + d + '. Gửi lên cấp trên duyệt',
                    buttons: '[No][Yes]'
                }, function (action) {
                    if (action === "Yes") {
                        $("#CommitmentStatusCheck").val(759);
                        $("#MsgBoxBack").hide();
                        showProcessing();
                        var postData = $form.serialize();
                        var formURL = $form.attr("action");
                        var val = $('#CommitmentAmount').val();
                        if (val != null && val > 0) {
                            $.ajax({
                                url: formURL,
                                type: "POST",
                                data: $form.serialize(),
                                success: function (result) {
                                    $('.field-validation-error span').empty();
                                    if (result.Success == true) {
                                        $("#myModal").modal('hide');
                                        if (options.Redirect != undefined && options.Redirect == true) {
                                            if (options.UrlRedirect != undefined && options.UrlRedirect == true) {
                                                window.location.href = options.UrlRedirect;
                                            }
                                        }
                                        else {
                                            ReloadData(options.urlback, options.databack, options.divload, options.fnNameReload);
                                        }
                                        //   Load();
                                    } else {
                                        // debugger

                                        // var validator = $form.validate();
                                        // validator.resetForm();
                                        // $form.find("[data-valmsg-replace]")
                                        //.removeClass("field-validation-error")
                                        //.addClass("field-validation-valid")
                                        //.empty();

                                        jQuery('#' + $form.attr('id') + ' .error').empty();
                                        $.each(result.Errors, function (key, value) {

                                            jQuery('#' + $form.attr('id') + ' span[data-valmsg-for="' + key + '"]').addClass('field-validation-error').removeClass('field-validation-valid').html('<span for="' + key + '" class="error">' + value + '</span>');
                                        });
                                    }

                                }
                            });
                        }
                        else {

                            $.ajax({
                                url: formURL,
                                type: "POST",
                                data: $form.serialize(),
                                success: function (result) {
                                    $('.field-validation-error span').empty();
                                    if (result.Success == true) {
                                        $("#myModal").modal('hide');

                                        if (options.Redirect != undefined && options.Redirect == true) {
                                            if (options.UrlRedirect != undefined && options.UrlRedirect == true) {
                                                window.location.href = options.UrlRedirect;
                                            }
                                        }
                                        else {
                                            ReloadData(options.urlback, options.databack, options.divload, options.fnNameReload);
                                        }
                                        //   Load();
                                    } else {
                                        // debugger
                                        // var validator = $form.validate();
                                        // validator.resetForm();
                                        // $form.find("[data-valmsg-replace]")
                                        //.removeClass("field-validation-error")
                                        //.addClass("field-validation-valid")
                                        //.empty();
                                        jQuery('#' + $form.attr('id') + ' .error').empty();
                                        $.each(result.Errors, function (key, value) {
                                            jQuery('#' + $form.attr('id') + ' span[data-valmsg-for="' + key + '"]').addClass('field-validation-error').removeClass('field-validation-valid').html('<span for="' + key + '" class="error">' + value + '</span>');
                                        });
                                    }

                                }
                            });
                        }

                    }
                    if (action === "No") {
                        return;
                    }

                });
            }
            else {
                $("#CommitmentStatusCheck").val(758);
                showProcessing();
                var postData = $form.serialize();
                var formURL = $form.attr("action");
                var val = $('#CommitmentAmount').val();
                if (val != null && val > 0) {
                    $.ajax({
                        url: formURL,
                        type: "POST",
                        data: $form.serialize(),
                        success: function (result) {
                            $('.field-validation-error span').empty();
                            if (result.Success == true) {
                                $("#myModal").modal('hide');
                                if (options.Redirect != undefined && options.Redirect == true) {
                                    if (options.UrlRedirect != undefined && options.UrlRedirect == true) {
                                        window.location.href = options.UrlRedirect;
                                    }
                                }
                                else {
                                    ReloadData(options.urlback, options.databack, options.divload, options.fnNameReload);
                                }
                                //   Load();
                            } else {
                                // debugger

                                // var validator = $form.validate();
                                // validator.resetForm();
                                // $form.find("[data-valmsg-replace]")
                                //.removeClass("field-validation-error")
                                //.addClass("field-validation-valid")
                                //.empty();

                                jQuery('#' + $form.attr('id') + ' .error').empty();
                                $.each(result.Errors, function (key, value) {

                                    jQuery('#' + $form.attr('id') + ' span[data-valmsg-for="' + key + '"]').addClass('field-validation-error').removeClass('field-validation-valid').html('<span for="' + key + '" class="error">' + value + '</span>');
                                });
                            }

                        }
                    });
                }
                else {

                    $.ajax({
                        url: formURL,
                        type: "POST",
                        data: $form.serialize(),
                        success: function (result) {
                            $('.field-validation-error span').empty();
                            if (result.Success == true) {
                                $("#myModal").modal('hide');

                                if (options.Redirect != undefined && options.Redirect == true) {
                                    if (options.UrlRedirect != undefined && options.UrlRedirect == true) {
                                        window.location.href = options.UrlRedirect;
                                    }
                                }
                                else {
                                    ReloadData(options.urlback, options.databack, options.divload, options.fnNameReload);
                                }
                                //   Load();
                            } else {
                                // debugger
                                // var validator = $form.validate();
                                // validator.resetForm();
                                // $form.find("[data-valmsg-replace]")
                                //.removeClass("field-validation-error")
                                //.addClass("field-validation-valid")
                                //.empty();
                                jQuery('#' + $form.attr('id') + ' .error').empty();
                                $.each(result.Errors, function (key, value) {
                                    jQuery('#' + $form.attr('id') + ' span[data-valmsg-for="' + key + '"]').addClass('field-validation-error').removeClass('field-validation-valid').html('<span for="' + key + '" class="error">' + value + '</span>');
                                });
                            }

                        }
                    });
                }
            }
        });

        $form.find(".btnCancel").on("click", function () {
            $("#myModal").modal('hide');
            $("#contentModel").empty();
        });
    }

    function CreatePopup(options) {

        // $("#myModal").attr('id', options.id);


        if (options.width != null) {
            var left = ($(window).width() - options.width) / 2;
            if (left < 0) {
                left = 0;
            }
            $(".modal-dialog").css({ 'margin-left': left });
            $(".modal-content").css({ 'width': options.width });
        }



        if (options.title != null) {
            $("#myModalLabel").html(options.title);
        }

        if (options.data == null) {
            options.data = {};
        }
        $.ajax(
        {
            url: options.url,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: options.data,
            async: false,
            success: function (response) {
                $("#contentModel").html(response);
                $("#myModal").modal('show');
            }
        });

        var $form = $("#" + options.idform);
        $form.find(".btnSubmit").on("click", function () {
            $form.find(".btnSubmit").hide();
            showProcessing();
            var postData = $form.serialize();
            var formURL = $form.attr("action");

            $.ajax({
                url: formURL,
                type: "POST",
                data: $form.serialize(),
                success: function (result) {
                    $form.find(".btnSubmit").show();
                    if (result.Success == true) {
                        $("#myModal").modal('hide');

                        if (options.Redirect != undefined && options.Redirect == true) {
                            if (options.UrlRedirect != undefined && options.UrlRedirect == true) {
                                window.location.href = options.UrlRedirect;
                            }
                        }
                        else {
                            ReloadData(options.urlback, options.databack, options.divload, options.fnNameReload);
                        }
                        //   Load();
                    } else {
                        // debugger

                        // var validator = $form.validate();
                        // validator.resetForm();
                        // $form.find("[data-valmsg-replace]")
                        //.removeClass("field-validation-error")
                        //.addClass("field-validation-valid")
                        //.empty();

                        jQuery('#' + $form.attr('id') + ' .error').empty();
                        $.each(result.Errors, function (key, value) {

                            jQuery('#' + $form.attr('id') + ' span[data-valmsg-for="' + key + '"]').addClass('field-validation-error').removeClass('field-validation-valid').html('<span for="' + key + '" class="error">' + value + '</span>');
                        });
                    }

                }
            });
        });

        $form.find(".btnCancel").on("click", function () {
            $("#myModal").modal('hide');
            $("#contentModel").empty();
        });
    }

    function ReloadData(urlBank, dataBack, divLoad, fnNameReload) {
        if (dataBack == null) {
            dataBack = {}
        }
        $.ajax(
        {
            url: urlBank,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: dataBack,
            async: false,
            success: function (response) {
                $("#myModal").modal('hide');
                $("#" + divLoad).html(response);
                if (fnNameReload != undefined && fnNameReload != null) {
                    window[fnNameReload]();
                }
            }
        });
    }
    //function Load() {
    //    $('#tbodyGridContractCOATermList tr td:nth-child(1)').each(function () {
    //        debugger;
    //        if ($(this).text() == 0) {
    //            $(this).parent().find('td:nth-child(5),td:nth-child(6)').css('background-color', 'yellow').css('text-decoration', 'line-through');
    //        }
    //        if ($(this).text() == 2) {
    //            $(this).parent().find('td:nth-child(5),td:nth-child(6)').css('background-color', 'yellow');
    //        }
    //    });
    //}
</script>
<style>
    .select2 {
        width: 100%;
    }
</style>
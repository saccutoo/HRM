@using Hrm.Framework.Helper
@using Hrm.Framework.Models
@using Hrm.Common
@using Newtonsoft.Json
@model Hrm.Admin.ViewModels.AddWorkingDayCalculationPeriodViewModel
@{
    ViewBag.Title = "Kỳ tính công";
    Layout = "~/Views/Shared/_MenuSidebarTop.cshtml";
}
<style>
    .workingday-wrapper {
        padding: 0px 37px 0px 30px;
        position: relative;
        bottom: 25px;
        height: calc(100% - 60px);
    }

    .table.table-bordered > thead {
        background-color: #ddd;
    }

    .table thead > tr > th, .table tbody > tr > th, .table tfoot > tr > th, .table thead > tr > td, .table tbody > tr > td, .table tfoot > tr > td {
        vertical-align: middle !important;
    }

    .hrm-v2-modal-body {
        margin: 0;
        height: 95%;
        position: relative;
        overflow-y: auto;
    }
    /*Hrm-v2 style Scroll*/

    ::-webkit-scrollbar-thumb {
        background-color: #ccc;
        border-radius: 5px;
        width: 1px;
        height: 1px;
    }

    ::-webkit-scrollbar-track {
        border: 1px solid #ccc;
        background-color: #F5F5F5;
        border-radius: 5px;
        width: 1px;
        height: 1px;
    }

    ::-webkit-scrollbar {
        width: 10px;
        background: #F5F5F5;
        height: 10px;
    }

    ::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
        background-color: #F5F5F5;
    }

    ::-webkit-scrollbar {
        width: 5px;
        background-color: #F5F5F5;
    }

    ::-webkit-scrollbar-thumb {
        border-radius: 5px;
        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);
        background-color: #7E7E7E;
    }

    ::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
        background-color: #F5F5F5;
    }

    ::-webkit-scrollbar {
        width: 5px;
        background-color: #F5F5F5;
    }

    ::-webkit-scrollbar-thumb {
        border-radius: 5px;
        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);
        background-color: #a2a0a0;
    }
    /*response*/
    @@media only screen and (min-width: 1367px) {
        .hrm-v2-modal-body {
            margin: 0;
            height: 89%;
            position: relative;
            overflow-y: hidden;
        }
    }

    @@media only screen and (max-width: 1366px) {
        .hrm-v2-modal-body {
            margin: 0;
            height: 83%;
            position: relative;
            overflow-y: auto;
        }
    }
    /*End*/
</style>
<div class="col-md-12 bread-crumb">
    <a href="/admin" class="bread-crumb-item prev-bread-crumb"> @T("Setting.Setting")</a>
    <span class="bread-crumb-item">
        &nbsp; &gt; &nbsp;
    </span>
    <a href="/admin" class="bread-crumb-item prev-bread-crumb"> @T("WorkingDay.TimeKeeping")</a>
    <span class="bread-crumb-item">&nbsp; &gt; &nbsp;@T("Workingday.Shift.Period")</span>
</div>
<div class="workingday-wrapper">
    <form id="frm-add-workingday-calculation-period">
        <div class="hrm-v2-modal-body">
            <div class="col-md-12 pd-0 display-inline-block">
                <div class="col-md-6 pd-l-0 hrm-v2-floating-form">
                    <input type="text" name="model.AutoId" value="@Model.WorkingDayCalculationPeriod.AutoId" hidden />
                    @Html.Partial(UrlHelpers.FloatingTemplate("_TextEditor.cshtml"), new TextEditorModel() { Name = "model.Name", IsRequired = true, LabelName = T("WorkingdayHoliday.HolidayName").ToString(), IsAnimationLabel = true, Value = Model.WorkingDayCalculationPeriod.Name })
                </div>
                <div class="col-md-6 pd-l-0 hrm-v2-floating-form">
                    @Html.Partial(UrlHelpers.FloatingTemplate("_Dropdown.cshtml"), new DropdownListModel() { LabelName = T("Table.Title.Status").ToString(), IsRequired = true, IsAnimationLabel = true, Data = Model.ListStatus, ValueField = "Id", Name = "model.Status", IsMultipleLanguage = true, DataType = "MasterData", PropertyName = "Name", Value = Model.WorkingDayCalculationPeriod.Status.ToString() })
                </div>
            </div>
            <div class="col-md-12 pd-0 display-inline-block">
                <div class="col-md-6 pd-l-0 hrm-v2-floating-form">
                    @Html.Partial(UrlHelpers.FloatingTemplate("_TextEditor.cshtml"), new TextEditorModel() { Name = "model.FromDate", IsRequired = true, LabelName = T("Staff.Detail.StartDate").ToString(), IsAnimationLabel = true, Type = "Number", Value = Model.WorkingDayCalculationPeriod.FromDate, OnChange = "checkValidNumber()" })
                </div>
                <div class="col-md-6 pd-l-0 hrm-v2-floating-form">
                    @Html.Partial(UrlHelpers.FloatingTemplate("_TextEditor.cshtml"), new TextEditorModel() { Name = "model.ToDate", IsRequired = true, LabelName = T("Staff.Detail.EndDate").ToString(), IsAnimationLabel = true, Type = "Number", Value = Model.WorkingDayCalculationPeriod.ToDate, OnChange = "checkValidNumber()" })
                </div>
            </div>
            <div class="col-md-12 pd-0 display-inline-block">
                <div class="checkbox" style="float:left;padding:0px">
                    @Html.Partial(UrlHelpers.Template("_Checkbox.cshtml"), new CheckboxModel() { Name = "ck-isdefault", Value = "true", Attribute = Model.WorkingDayCalculationPeriod.IsDefault.ToString() == "True" ? "checked" : string.Empty, Id = "model.IsDefault" })
                </div>
                <span style="float: left;line-height:65px;">@T("Checklist.IsDefault")</span>
            </div>
            @{
                var dayIds = new List<string>() {
                                                T("Calendar.Date.Monday").ToString(),
                                                T("Calendar.Date.Tuesday").ToString(),
                                                T("Calendar.Date.Wednesday").ToString(),
                                                T("Calendar.Date.Thursday").ToString(),
                                                T("Calendar.Date.Friday").ToString(),
                                                T("Calendar.Date.Saturday").ToString(),
                                                T("Calendar.Date.Sunday").ToString()
            };
            }
            <div class="organization-table">
                <table class="table table-bordered">
                    <thead>
                        <tr style="height: 50px;">
                            <th></th>
                            @{
                                foreach (var day in dayIds)
                                {
                                    <th>@day</th>
                                }
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @{ for (int i = 0; i < Model.ListOrderWeekOfMonth.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @M(Model.ListOrderWeekOfMonth[i].Id.ToString() + ";" + DataType.MasterData + ";Name")
                                        @{
                                            var orderWeek = "listWorkDay[" + i + "].OrderWeek";
                                            var workDayId = string.Empty;
                                            if (Model.WorkDays.Count > 0)
                                            {
                                                workDayId = "listWorkDay[" + i + "].Id";
                                            }
                                        }
                                        <input name="@orderWeek" value="@Model.ListOrderWeekOfMonth[i].Id.ToString()" hidden />
                                        @if (workDayId != string.Empty)
                                        {
                                            <input name="@workDayId" value="@Model.WorkDays[i].Id.ToString()" hidden />
                                        }
                                    </td>
                                    <td>
                                        <div class="checkbox" style="float:left;padding:0px">
                                            @Html.Partial(UrlHelpers.Template("_Checkbox.cshtml"), new CheckboxModel() { Name = "ck-ckecked-monday" + i, Value = "true", Attribute = Model.WorkDays.Count > 0 ? Model.WorkDays[i].Monday == true ? "checked" : string.Empty : "checked", Id = "listWorkDay[" + i + "].Monday" })
                                        </div>
                                    </td>
                                    <td>
                                        <div class="checkbox" style="float:left;padding:0px">
                                            @Html.Partial(UrlHelpers.Template("_Checkbox.cshtml"), new CheckboxModel() { Name = "ck-ckecked-tuesday" + i, Value = "true", Attribute = Model.WorkDays.Count > 0 ? Model.WorkDays[i].Tuesday == true ? "checked" : string.Empty : "checked", Id = "listWorkDay[" + i + "].Tuesday" })
                                        </div>
                                    </td>
                                    <td>
                                        <div class="checkbox" style="float:left;padding:0px">
                                            @Html.Partial(UrlHelpers.Template("_Checkbox.cshtml"), new CheckboxModel() { Name = "ck-ckecked-wednesday" + i, Value = "true", Attribute = Model.WorkDays.Count > 0 ? Model.WorkDays[i].Wednesday == true ? "checked" : string.Empty : "checked", Id = "listWorkDay[" + i + "].Wednesday" })
                                        </div>
                                    </td>
                                    <td>
                                        <div class="checkbox" style="float:left;padding:0px">
                                            @Html.Partial(UrlHelpers.Template("_Checkbox.cshtml"), new CheckboxModel() { Name = "ck-ckecked-thursday" + i, Value = "true", Attribute = Model.WorkDays.Count > 0 ? Model.WorkDays[i].Thursday == true ? "checked" : string.Empty : "checked", Id = "listWorkDay[" + i + "].Thursday" })
                                        </div>
                                    </td>
                                    <td>
                                        <div class="checkbox" style="float:left;padding:0px">
                                            @Html.Partial(UrlHelpers.Template("_Checkbox.cshtml"), new CheckboxModel() { Name = "ck-ckecked-friday" + i, Value = "true", Attribute = Model.WorkDays.Count > 0 ? Model.WorkDays[i].Friday == true ? "checked" : string.Empty : "checked", Id = "listWorkDay[" + i + "].Friday" })
                                        </div>
                                    </td>
                                    <td>
                                        <div class="checkbox" style="float:left;padding:0px">
                                            @Html.Partial(UrlHelpers.Template("_Checkbox.cshtml"), new CheckboxModel() { Name = "ck-ckecked-saturday" + i, Value = "true", Attribute = Model.WorkDays.Count > 0 ? Model.WorkDays[i].Saturday == true ? "checked" : string.Empty : i == 1 ? "checked" : string.Empty, Id = "listWorkDay[" + i + "].Saturday" })
                                        </div>
                                    </td>
                                    <td>
                                        <div class="checkbox" style="float:left;padding:0px">
                                            @Html.Partial(UrlHelpers.Template("_Checkbox.cshtml"), new CheckboxModel() { Name = "ck-ckecked-sunday" + i, Value = "true", Attribute = Model.WorkDays.Count > 0 ? Model.WorkDays[i].Sunday == true ? "checked" : string.Empty : string.Empty, Id = "listWorkDay[" + i + "].Sunday" })
                                        </div>
                                    </td>
                                </tr>
                                            }
                        }

                    </tbody>
                </table>
            </div>
            <div class="col-md-12 pd-0 display-inline-block">
                @*<div class="col-md-6 pd-l-0 hrm-v2-floating-form">
                        @Html.Partial(UrlHelpers.FloatingTemplate("_TextEditor.cshtml"), new TextEditorModel() { Name = "model.MaximumEdition", IsRequired = true, LabelName = T("Table.Title.MaximumNumberOfEditions").ToString(), IsAnimationLabel = true, Type = "Number", Value = Model.WorkingDayCalculationPeriod.MaximumEdition.ToString() })
                    </div>*@
                <div class="col-md-12 pd-l-0 hrm-v2-floating-form">
                    @Html.Partial(UrlHelpers.FloatingTemplate("_TextEditor.cshtml"), new TextEditorModel() { Name = "model.Note", IsRequired = false, LabelName = T("Staff.Detail.Note").ToString(), IsAnimationLabel = true, Value = Model.WorkingDayCalculationPeriod.Note })
                </div>
            </div>

        </div>
        <div class="footer">
            <div class="footer-login">
                <div class="pull-right">
                    @Html.Partial(UrlHelpers.Template("_CloseButton.cshtml"), new ButtonModel() { Name = "close-model", OnClick = "cancelAddWorkingdayCalculationPeriod()", Value = "Workingday.Close", ClassName = "hrm-v2-btn-close", Style = "float:left;margin-right:10px" })
                    @Html.Partial(UrlHelpers.Template("_NormalButton.cshtml"), new ButtonModel() { Name = "save-and-continue", OnClick = "saveWorkingdayCalculationPeriod()", Value = "Workingday.Save", Type = "button", ClassName = "hrm-v2-btn-save", Style = "float:left;margin-right:10px" })
                </div>
            </div>
        </div>
    </form>
</div>

<script>
    //$('.Number').autoNumeric("init");
    function saveWorkingdayCalculationPeriod() {
        $('#cover-spin').show();
        $("#frm-add-workingday-calculation-period span[name*='-error']").text("");
        $.ajax(
        {
            type: "POST",
            url: "/Admin/Workingday/SaveWorkingdayCalculationPeriod",
            data: $('#frm-add-workingday-calculation-period').serializeArray(),
            success: function (response) {
                if (response.Invalid) {
                    var validations = response.Result;
                    RenderError(validations, "frm-add-workingday-calculation-period");
                    $('#cover-spin').hide();
                }
                if (response.result.Success == true) {
                    ShowMessage(response.result.Success, msgSuccessful, response.responeseResources, 500, 3000);
                    setTimeout(function () {
                        window.location.href = "/Admin/Workingday/WorkingDayCalculationPeriod";
                    }, 4000);
                }
                else {
                    ShowMessage(response.result.Success, msgFalse, response.responeseResources, 500, 3000);
                    $('#cover-spin').hide();
                }
            }
        });
    }
    function cancelAddWorkingdayCalculationPeriod() {
        window.location.href = "/Admin/Workingday/WorkingDayCalculationPeriod";
    }
    function checkValidNumber() {
        if (parseInt($('#model-fromdate').val()) > 31 || parseInt($('#model-fromdate').val()) < 0) {
            $('#model-fromdate').val(0);
        }
    }

</script>
